<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MrqLl176f2wpoyMs+c3XAAAAAElFTkSuQmCC
</value>
  </data>
</root>